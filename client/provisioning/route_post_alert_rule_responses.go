// Code generated by go-swagger; DO NOT EDIT.

package provisioning

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-openapi-client-go/models"
)

// RoutePostAlertRuleReader is a Reader for the RoutePostAlertRule structure.
type RoutePostAlertRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RoutePostAlertRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewRoutePostAlertRuleCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRoutePostAlertRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/provisioning/alert-rules] RoutePostAlertRule", response, response.Code())
	}
}

// NewRoutePostAlertRuleCreated creates a RoutePostAlertRuleCreated with default headers values
func NewRoutePostAlertRuleCreated() *RoutePostAlertRuleCreated {
	return &RoutePostAlertRuleCreated{}
}

/*
RoutePostAlertRuleCreated describes a response with status code 201, with default header values.

ProvisionedAlertRule
*/
type RoutePostAlertRuleCreated struct {
	Payload *models.ProvisionedAlertRule
}

// IsSuccess returns true when this route post alert rule created response has a 2xx status code
func (o *RoutePostAlertRuleCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this route post alert rule created response has a 3xx status code
func (o *RoutePostAlertRuleCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this route post alert rule created response has a 4xx status code
func (o *RoutePostAlertRuleCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this route post alert rule created response has a 5xx status code
func (o *RoutePostAlertRuleCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this route post alert rule created response a status code equal to that given
func (o *RoutePostAlertRuleCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the route post alert rule created response
func (o *RoutePostAlertRuleCreated) Code() int {
	return 201
}

func (o *RoutePostAlertRuleCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/provisioning/alert-rules][%d] routePostAlertRuleCreated %s", 201, payload)
}

func (o *RoutePostAlertRuleCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/provisioning/alert-rules][%d] routePostAlertRuleCreated %s", 201, payload)
}

func (o *RoutePostAlertRuleCreated) GetPayload() *models.ProvisionedAlertRule {
	return o.Payload
}

func (o *RoutePostAlertRuleCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProvisionedAlertRule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRoutePostAlertRuleBadRequest creates a RoutePostAlertRuleBadRequest with default headers values
func NewRoutePostAlertRuleBadRequest() *RoutePostAlertRuleBadRequest {
	return &RoutePostAlertRuleBadRequest{}
}

/*
RoutePostAlertRuleBadRequest describes a response with status code 400, with default header values.

ValidationError
*/
type RoutePostAlertRuleBadRequest struct {
	Payload *models.ValidationError
}

// IsSuccess returns true when this route post alert rule bad request response has a 2xx status code
func (o *RoutePostAlertRuleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this route post alert rule bad request response has a 3xx status code
func (o *RoutePostAlertRuleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this route post alert rule bad request response has a 4xx status code
func (o *RoutePostAlertRuleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this route post alert rule bad request response has a 5xx status code
func (o *RoutePostAlertRuleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this route post alert rule bad request response a status code equal to that given
func (o *RoutePostAlertRuleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the route post alert rule bad request response
func (o *RoutePostAlertRuleBadRequest) Code() int {
	return 400
}

func (o *RoutePostAlertRuleBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/provisioning/alert-rules][%d] routePostAlertRuleBadRequest %s", 400, payload)
}

func (o *RoutePostAlertRuleBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/provisioning/alert-rules][%d] routePostAlertRuleBadRequest %s", 400, payload)
}

func (o *RoutePostAlertRuleBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *RoutePostAlertRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

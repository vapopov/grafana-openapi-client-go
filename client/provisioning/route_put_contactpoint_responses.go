// Code generated by go-swagger; DO NOT EDIT.

package provisioning

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-openapi-client-go/models"
)

// RoutePutContactpointReader is a Reader for the RoutePutContactpoint structure.
type RoutePutContactpointReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RoutePutContactpointReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewRoutePutContactpointAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRoutePutContactpointBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/provisioning/contact-points/{UID}] RoutePutContactpoint", response, response.Code())
	}
}

// NewRoutePutContactpointAccepted creates a RoutePutContactpointAccepted with default headers values
func NewRoutePutContactpointAccepted() *RoutePutContactpointAccepted {
	return &RoutePutContactpointAccepted{}
}

/*
RoutePutContactpointAccepted describes a response with status code 202, with default header values.

Ack
*/
type RoutePutContactpointAccepted struct {
	Payload models.Ack
}

// IsSuccess returns true when this route put contactpoint accepted response has a 2xx status code
func (o *RoutePutContactpointAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this route put contactpoint accepted response has a 3xx status code
func (o *RoutePutContactpointAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this route put contactpoint accepted response has a 4xx status code
func (o *RoutePutContactpointAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this route put contactpoint accepted response has a 5xx status code
func (o *RoutePutContactpointAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this route put contactpoint accepted response a status code equal to that given
func (o *RoutePutContactpointAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the route put contactpoint accepted response
func (o *RoutePutContactpointAccepted) Code() int {
	return 202
}

func (o *RoutePutContactpointAccepted) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/provisioning/contact-points/{UID}][%d] routePutContactpointAccepted %s", 202, payload)
}

func (o *RoutePutContactpointAccepted) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/provisioning/contact-points/{UID}][%d] routePutContactpointAccepted %s", 202, payload)
}

func (o *RoutePutContactpointAccepted) GetPayload() models.Ack {
	return o.Payload
}

func (o *RoutePutContactpointAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRoutePutContactpointBadRequest creates a RoutePutContactpointBadRequest with default headers values
func NewRoutePutContactpointBadRequest() *RoutePutContactpointBadRequest {
	return &RoutePutContactpointBadRequest{}
}

/*
RoutePutContactpointBadRequest describes a response with status code 400, with default header values.

ValidationError
*/
type RoutePutContactpointBadRequest struct {
	Payload *models.ValidationError
}

// IsSuccess returns true when this route put contactpoint bad request response has a 2xx status code
func (o *RoutePutContactpointBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this route put contactpoint bad request response has a 3xx status code
func (o *RoutePutContactpointBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this route put contactpoint bad request response has a 4xx status code
func (o *RoutePutContactpointBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this route put contactpoint bad request response has a 5xx status code
func (o *RoutePutContactpointBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this route put contactpoint bad request response a status code equal to that given
func (o *RoutePutContactpointBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the route put contactpoint bad request response
func (o *RoutePutContactpointBadRequest) Code() int {
	return 400
}

func (o *RoutePutContactpointBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/provisioning/contact-points/{UID}][%d] routePutContactpointBadRequest %s", 400, payload)
}

func (o *RoutePutContactpointBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/provisioning/contact-points/{UID}][%d] routePutContactpointBadRequest %s", 400, payload)
}

func (o *RoutePutContactpointBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *RoutePutContactpointBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

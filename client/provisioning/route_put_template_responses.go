// Code generated by go-swagger; DO NOT EDIT.

package provisioning

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-openapi-client-go/models"
)

// RoutePutTemplateReader is a Reader for the RoutePutTemplate structure.
type RoutePutTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RoutePutTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewRoutePutTemplateAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRoutePutTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/provisioning/templates/{name}] RoutePutTemplate", response, response.Code())
	}
}

// NewRoutePutTemplateAccepted creates a RoutePutTemplateAccepted with default headers values
func NewRoutePutTemplateAccepted() *RoutePutTemplateAccepted {
	return &RoutePutTemplateAccepted{}
}

/*
RoutePutTemplateAccepted describes a response with status code 202, with default header values.

NotificationTemplate
*/
type RoutePutTemplateAccepted struct {
	Payload *models.NotificationTemplate
}

// IsSuccess returns true when this route put template accepted response has a 2xx status code
func (o *RoutePutTemplateAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this route put template accepted response has a 3xx status code
func (o *RoutePutTemplateAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this route put template accepted response has a 4xx status code
func (o *RoutePutTemplateAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this route put template accepted response has a 5xx status code
func (o *RoutePutTemplateAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this route put template accepted response a status code equal to that given
func (o *RoutePutTemplateAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the route put template accepted response
func (o *RoutePutTemplateAccepted) Code() int {
	return 202
}

func (o *RoutePutTemplateAccepted) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/provisioning/templates/{name}][%d] routePutTemplateAccepted %s", 202, payload)
}

func (o *RoutePutTemplateAccepted) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/provisioning/templates/{name}][%d] routePutTemplateAccepted %s", 202, payload)
}

func (o *RoutePutTemplateAccepted) GetPayload() *models.NotificationTemplate {
	return o.Payload
}

func (o *RoutePutTemplateAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotificationTemplate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRoutePutTemplateBadRequest creates a RoutePutTemplateBadRequest with default headers values
func NewRoutePutTemplateBadRequest() *RoutePutTemplateBadRequest {
	return &RoutePutTemplateBadRequest{}
}

/*
RoutePutTemplateBadRequest describes a response with status code 400, with default header values.

ValidationError
*/
type RoutePutTemplateBadRequest struct {
	Payload *models.ValidationError
}

// IsSuccess returns true when this route put template bad request response has a 2xx status code
func (o *RoutePutTemplateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this route put template bad request response has a 3xx status code
func (o *RoutePutTemplateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this route put template bad request response has a 4xx status code
func (o *RoutePutTemplateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this route put template bad request response has a 5xx status code
func (o *RoutePutTemplateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this route put template bad request response a status code equal to that given
func (o *RoutePutTemplateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the route put template bad request response
func (o *RoutePutTemplateBadRequest) Code() int {
	return 400
}

func (o *RoutePutTemplateBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/provisioning/templates/{name}][%d] routePutTemplateBadRequest %s", 400, payload)
}

func (o *RoutePutTemplateBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /v1/provisioning/templates/{name}][%d] routePutTemplateBadRequest %s", 400, payload)
}

func (o *RoutePutTemplateBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *RoutePutTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

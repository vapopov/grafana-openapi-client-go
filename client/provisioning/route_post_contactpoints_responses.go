// Code generated by go-swagger; DO NOT EDIT.

package provisioning

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-openapi-client-go/models"
)

// RoutePostContactpointsReader is a Reader for the RoutePostContactpoints structure.
type RoutePostContactpointsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RoutePostContactpointsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewRoutePostContactpointsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRoutePostContactpointsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/provisioning/contact-points] RoutePostContactpoints", response, response.Code())
	}
}

// NewRoutePostContactpointsAccepted creates a RoutePostContactpointsAccepted with default headers values
func NewRoutePostContactpointsAccepted() *RoutePostContactpointsAccepted {
	return &RoutePostContactpointsAccepted{}
}

/*
RoutePostContactpointsAccepted describes a response with status code 202, with default header values.

EmbeddedContactPoint
*/
type RoutePostContactpointsAccepted struct {
	Payload *models.EmbeddedContactPoint
}

// IsSuccess returns true when this route post contactpoints accepted response has a 2xx status code
func (o *RoutePostContactpointsAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this route post contactpoints accepted response has a 3xx status code
func (o *RoutePostContactpointsAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this route post contactpoints accepted response has a 4xx status code
func (o *RoutePostContactpointsAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this route post contactpoints accepted response has a 5xx status code
func (o *RoutePostContactpointsAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this route post contactpoints accepted response a status code equal to that given
func (o *RoutePostContactpointsAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the route post contactpoints accepted response
func (o *RoutePostContactpointsAccepted) Code() int {
	return 202
}

func (o *RoutePostContactpointsAccepted) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/provisioning/contact-points][%d] routePostContactpointsAccepted %s", 202, payload)
}

func (o *RoutePostContactpointsAccepted) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/provisioning/contact-points][%d] routePostContactpointsAccepted %s", 202, payload)
}

func (o *RoutePostContactpointsAccepted) GetPayload() *models.EmbeddedContactPoint {
	return o.Payload
}

func (o *RoutePostContactpointsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmbeddedContactPoint)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRoutePostContactpointsBadRequest creates a RoutePostContactpointsBadRequest with default headers values
func NewRoutePostContactpointsBadRequest() *RoutePostContactpointsBadRequest {
	return &RoutePostContactpointsBadRequest{}
}

/*
RoutePostContactpointsBadRequest describes a response with status code 400, with default header values.

ValidationError
*/
type RoutePostContactpointsBadRequest struct {
	Payload *models.ValidationError
}

// IsSuccess returns true when this route post contactpoints bad request response has a 2xx status code
func (o *RoutePostContactpointsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this route post contactpoints bad request response has a 3xx status code
func (o *RoutePostContactpointsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this route post contactpoints bad request response has a 4xx status code
func (o *RoutePostContactpointsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this route post contactpoints bad request response has a 5xx status code
func (o *RoutePostContactpointsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this route post contactpoints bad request response a status code equal to that given
func (o *RoutePostContactpointsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the route post contactpoints bad request response
func (o *RoutePostContactpointsBadRequest) Code() int {
	return 400
}

func (o *RoutePostContactpointsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/provisioning/contact-points][%d] routePostContactpointsBadRequest %s", 400, payload)
}

func (o *RoutePostContactpointsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/provisioning/contact-points][%d] routePostContactpointsBadRequest %s", 400, payload)
}

func (o *RoutePostContactpointsBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *RoutePostContactpointsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
